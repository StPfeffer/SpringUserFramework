plugins {
  id 'java'
  id 'org.springframework.boot' version '3.3.2'
  id 'io.spring.dependency-management' version '1.1.6'
  id "com.github.ben-manes.versions" version "0.51.0"

}

group = 'com.digitalsanctuary.spring'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

// Define the configurations used in the project
configurations {
    developmentOnly
    runtimeOnly {
        extendsFrom developmentOnly
    }
    testImplementation {
        extendsFrom runtimeOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
	dev
}

repositories {
	mavenCentral()
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.3.0'


    // Other dependencies
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    // runtimeOnly 'io.micrometer:micrometer-registry-new-relic'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.4.1'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.passay:passay:1.6.4'
    implementation 'com.google.guava:guava:33.2.1-jre'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    compileOnly 'javax.validation:validation-api:2.0.1.Final'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2:2.3.232'
    testImplementation group: 'com.codeborne', name: 'selenide', version: '7.4.2'
    testImplementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.9.2'

}

test {
	useJUnitPlatform()
	  testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}


bootJar {
	launchScript {
		properties 'confFolder': '/opt/app/conf/'
	}
}

bootRun {
	// Use Spring Boot DevTool only when we run Gradle bootRun task
	classpath = sourceSets.main.runtimeClasspath + configurations.developmentOnly
    sourceResources sourceSets.main
	if (project.hasProperty('profiles')) {
		environment SPRING_PROFILES_ACTIVE: profiles
	} else {
		def profiles = 'local'
		environment SPRING_PROFILES_ACTIVE: profiles
	}
}
